# Generated by Django 5.1.5 on 2025-07-28 11:00

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('client', '0176_alter_requisitesotherkpp_options'),
        ('product', '0175_merge_20250724_1344'),
        ('supplier', '0052_merge_20250724_1343'),
        ('user', '0020_alter_adminuser_phone'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalCart',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='корзина сохранена')),
                ('session_key', models.CharField(blank=True, max_length=500, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cart_admin', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.adminuser', verbose_name='Администратор')),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='client.client', verbose_name='Клиент')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Корзина',
                'verbose_name_plural': 'historical Корзины',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProductCart',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('product_price', models.FloatField(blank=True, default=None, null=True, verbose_name='Цена товара')),
                ('product_price_motrum', models.FloatField(blank=True, default=None, null=True, verbose_name='Цена товара')),
                ('product_sale_motrum', models.FloatField(blank=True, default=None, null=True, verbose_name='Скидка мотрум товара ')),
                ('sale_client', models.FloatField(blank=True, default=None, null=True, verbose_name='Скидка клиента')),
                ('sale_marja', models.FloatField(blank=True, default=None, null=True, verbose_name='Маржа')),
                ('product_new', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Название товара нового без добавления в бд')),
                ('product_new_article', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Артикул товара нового без добавления в бд')),
                ('product_new_price', models.FloatField(blank=True, default=None, null=True, verbose_name='Цена товара нового без добавления в бд')),
                ('product_new_sale', models.FloatField(blank=True, default=None, null=True, verbose_name='Доп.скидка товара нового без добавления в бд')),
                ('product_new_sale_motrum', models.FloatField(blank=True, default=None, null=True, verbose_name='Скидка мотрум товара нового без добавления в бд')),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='количество товара')),
                ('comment', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Комментарий')),
                ('date_delivery', models.DateField(null=True, verbose_name='Дата поставки товара')),
                ('tag_auto_document', models.CharField(choices=[('ONE', 'Один вариант'), ('MULTI', 'Несколько вариантов'), ('NONE', 'Нет варинтов'), ('-', 'Не из документа')], default='-', max_length=100)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cart', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='product.cart')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='product.lot', verbose_name='Единица измерения')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='product.product', verbose_name='Продукты')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier.supplier', verbose_name='Поставщик')),
                ('vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier.vendor', verbose_name='Производитель')),
            ],
            options={
                'verbose_name': 'historical Корзина продукт',
                'verbose_name_plural': 'historical Корзина Продукты',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
