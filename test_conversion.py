#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ XLSX –≤ PDF
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()

from test_xlsx_bill import test_create_xlsx_bill
from apps.client.utils import (
    convert_xlsx_to_pdf,
    convert_xlsx_to_pdf_simple,
    convert_xlsx_to_pdf_advanced
)


def test_all_conversion_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ XLSX –≤ PDF")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π XLSX —Ñ–∞–π–ª
    print("üìÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π XLSX —Ñ–∞–π–ª...")
    xlsx_path = test_create_xlsx_bill()
    
    if not xlsx_path:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π XLSX —Ñ–∞–π–ª")
        return False
    
    print(f"‚úÖ XLSX —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {xlsx_path}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é (pandas + reportlab)...")
    try:
        pdf_path_simple = convert_xlsx_to_pdf_simple(xlsx_path)
        print(f"‚úÖ –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {pdf_path_simple}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if os.path.exists(pdf_path_simple):
            size = os.path.getsize(pdf_path_simple)
            print(f"   üìä –†–∞–∑–º–µ—Ä PDF: {size} –±–∞–π—Ç")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
    
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é...")
    try:
        pdf_path_advanced = convert_xlsx_to_pdf_advanced(xlsx_path)
        print(f"‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {pdf_path_advanced}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if os.path.exists(pdf_path_advanced):
            size = os.path.getsize(pdf_path_advanced)
            print(f"   üìä –†–∞–∑–º–µ—Ä PDF: {size} –±–∞–π—Ç")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
    
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é (—Å wkhtmltopdf)
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é (pandas + pdfkit + wkhtmltopdf)...")
    try:
        pdf_path_main = convert_xlsx_to_pdf(xlsx_path)
        print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {pdf_path_main}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if os.path.exists(pdf_path_main):
            size = os.path.getsize(pdf_path_main)
            print(f"   üìä –†–∞–∑–º–µ—Ä PDF: {size} –±–∞–π—Ç")
    except Exception as e:
        print(f"‚ùå –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
        print("   üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ wkhtmltopdf —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    print()
    print("=" * 60)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    return True


def cleanup_test_files():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    current_dir = os.getcwd()
    for file in os.listdir(current_dir):
        if file.endswith('.xlsx') and 'test' in file.lower():
            try:
                os.remove(file)
                print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file}")
            except:
                pass
        
        if file.endswith('.pdf') and 'test' in file.lower():
            try:
                os.remove(file)
                print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file}")
            except:
                pass


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ XLSX –≤ PDF")
    print()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_all_conversion_methods()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—á–∏—Å—Ç–∫–∏
    if success:
        print()
        cleanup = input("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã? (y/n): ").lower().strip()
        if cleanup in ['y', 'yes', '–¥–∞']:
            cleanup_test_files()
    
    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!") 